<templateSet group="AndroidKotlin">
  <template name="foreach" value="for ($VAR$ in $ITERABLE$) {&#10;$END$&#10;}" description="Iterate over elements of iterable (for-in loop)" toReformat="true" toShortenFQNames="true">
    <variable name="ITERABLE" expression="kotlinVariable()" defaultValue="&quot;iterable&quot;" alwaysStopAt="true" />
    <variable name="VAR" expression="kotlinSuggestVariableName()" defaultValue="&quot;i&quot;" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN_STATEMENT" value="true" />
    </context>
  </template>
  <template name="if" value="if ($VAR$){&#10;    $cursor$&#10;}" description="if statement" toReformat="true" toShortenFQNames="true">
    <variable name="VAR" expression="kotlinVariable()" defaultValue="&quot;i&quot;" alwaysStopAt="true" />
    <variable name="cursor" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN_EXPRESSION" value="true" />
    </context>
  </template>
  <template name="ifnn" value="if ($VAR$ != null){&#10;    $END$&#10;}" description="if not null" toReformat="true" toShortenFQNames="true">
    <variable name="VAR" expression="kotlinVariable()" defaultValue="&quot;i&quot;" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN_EXPRESSION" value="true" />
    </context>
  </template>
  <template name="ifel" value="if ($VAR$){&#10;    $cursor$&#10;}&#10;else{&#10;    $END$&#10;}" description="if else statement" toReformat="true" toShortenFQNames="true">
    <variable name="VAR" expression="kotlinVariable()" defaultValue="&quot;i&quot;" alwaysStopAt="true" />
    <variable name="cursor" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN_EXPRESSION" value="true" />
    </context>
  </template>
  <template name="logd" value="android.util.Log.d(TAG_LOG, &quot;$METHOD_NAME$: $content$&quot;);" description="Log.d(TAG_LOG, String)" toReformat="true" toShortenFQNames="true">
    <variable name="METHOD_NAME" expression="kotlinFunctionName()" defaultValue="" alwaysStopAt="false" />
    <variable name="content" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN_STATEMENT" value="true" />
    </context>
  </template>
  <template name="loge" value="android.util.Log.e(TAG_LOG, &quot;$METHOD_NAME$: $content$&quot;, $exception$);" description="Log.e(TAG_LOG, String, Exception)" toReformat="true" toShortenFQNames="true">
    <variable name="METHOD_NAME" expression="kotlinFunctionName()" defaultValue="" alwaysStopAt="false" />
    <variable name="content" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="exception" expression="kotlinSuggestVariableName()" defaultValue="&quot;e&quot;" alwaysStopAt="false" />
    <context>
      <option name="KOTLIN_STATEMENT" value="true" />
    </context>
  </template>
  <template name="logi" value="android.util.Log.i(TAG_LOG, &quot;$METHOD_NAME$: $content$&quot;);" description="Log.i(TAG_LOG, String)" toReformat="true" toShortenFQNames="true">
    <variable name="METHOD_NAME" expression="kotlinFunctionName()" defaultValue="" alwaysStopAt="false" />
    <variable name="content" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN_STATEMENT" value="true" />
    </context>
  </template>
  <template name="logw" value="android.util.Log.w(TAG_LOG, &quot;$METHOD_NAME$: $content$&quot;, $exception$);" description="Log.w(TAG_LOG, String, Exception)" toReformat="true" toShortenFQNames="true">
    <variable name="METHOD_NAME" expression="kotlinFunctionName()" defaultValue="" alwaysStopAt="false" />
    <variable name="content" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="exception" expression="kotlinSuggestVariableName()" defaultValue="&quot;e&quot;" alwaysStopAt="false" />
    <context>
      <option name="KOTLIN_STATEMENT" value="true" />
    </context>
  </template>
  <template name="wtf" value="android.util.Log.wtf(TAG_LOG, &quot;$METHOD_NAME$: $content$&quot;, $exception$);" description="Log.wtf(TAG_LOG, String, Exception)" toReformat="true" toShortenFQNames="true">
    <variable name="METHOD_NAME" expression="kotlinFunctionName()" defaultValue="" alwaysStopAt="false" />
    <variable name="content" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="exception" expression="kotlinSuggestVariableName()" defaultValue="&quot;e&quot;" alwaysStopAt="false" />
    <context>
      <option name="KOTLIN_STATEMENT" value="true" />
    </context>
  </template>
  <template name="logr" value="android.util.Log.d(TAG_LOG, &quot;$METHOD_NAME$() returned: &quot; + $result$);" description="Log result of this method" toReformat="true" toShortenFQNames="true">
    <variable name="METHOD_NAME" expression="kotlinFunctionName()" defaultValue="" alwaysStopAt="false" />
    <variable name="result" expression="kotlinSuggestVariableName()" defaultValue="&quot;result&quot;" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN_STATEMENT" value="true" />
    </context>
  </template>
  <template name="logt" value="private val TAG_LOG = &quot;$className$&quot;;" description="A val logtag with your current classname" toReformat="true" toShortenFQNames="true">
    <variable name="className" expression="groovyScript(&quot;_1.take(Math.min(23, _1.length()));&quot;, kotlinClassName())" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="KOTLIN_CLASS" value="true" />
    </context>
  </template>
  <template name="const" value="private val $NAME$ = $value$;" description="Define val int constant" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="&quot;NAME&quot;" alwaysStopAt="true" />
    <variable name="value" expression="groovyScript(&quot;new Random().nextInt(1000)&quot;)" defaultValue="0" alwaysStopAt="false" />
    <context>
      <option name="KOTLIN_CLASS" value="true" />
    </context>
  </template>
</templateSet>